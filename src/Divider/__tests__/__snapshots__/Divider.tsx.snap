// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Divider Component should apply values from theme 1`] = `
<View
  replaceTheme={[Function]}
  style={
    Object {
      "backgroundColor": "red",
      "borderBottomColor": "#bcbbc1",
      "borderBottomWidth": 0.5,
    }
  }
  updateTheme={[Function]}
/>
`;

exports[`Divider Component should pass view properties 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
      }
    }
    testID="testing"
  />
</Fragment>
`;

exports[`Divider Component should render with color and orientation horizontal 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#2089dc",
        "borderBottomWidth": 0.5,
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with color and orientation vertical 1`] = `
<Fragment>
  <View
    style={
      Object {
        "alignSelf": "stretch",
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "borderRightColor": "#2089dc",
        "borderRightWidth": 0.5,
        "height": "auto",
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with inset true and insetType left 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "marginLeft": 72,
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with inset true and insetType middle 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "marginLeft": 72,
        "marginRight": 72,
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with inset true and insetType right 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "marginRight": 72,
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with orientation vertical 1`] = `
<Fragment>
  <View
    style={
      Object {
        "alignSelf": "stretch",
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "borderRightColor": "#bcbbc1",
        "borderRightWidth": 0.5,
        "height": "auto",
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with style 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "borderLeftColor": "blue",
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with subHeader and subHeaderStyle 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
      }
    }
  />
  <Text
    style={
      Object {
        "color": "blue",
        "includeFontPadding": false,
      }
    }
  >
    Test
  </Text>
</Fragment>
`;

exports[`Divider Component should render with subHeader and subHeaderStyle and inset true 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "marginLeft": 72,
      }
    }
  />
  <Text
    style={
      Object {
        "color": "blue",
        "includeFontPadding": false,
        "marginLeft": 72,
      }
    }
  >
    Test
  </Text>
</Fragment>
`;

exports[`Divider Component should render with width and orientation horizontal 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 5,
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render with width and orientation vertical 1`] = `
<Fragment>
  <View
    style={
      Object {
        "alignSelf": "stretch",
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
        "borderRightColor": "#bcbbc1",
        "borderRightWidth": 5,
        "height": "auto",
      }
    }
  />
</Fragment>
`;

exports[`Divider Component should render without issues 1`] = `
<Fragment>
  <View
    style={
      Object {
        "borderBottomColor": "#bcbbc1",
        "borderBottomWidth": 0.5,
      }
    }
  />
</Fragment>
`;
