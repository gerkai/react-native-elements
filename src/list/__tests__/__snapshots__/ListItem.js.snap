// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItem component should render with avatar 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLongPress={undefined}
    onPress={undefined}
    style={
        Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#ededed",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            Object {
              "backgroundColor": "peru",
            },
          ]
    }
    underlayColor="white"
>
    <View
        style={
            Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                Object {
                  "backgroundColor": "peru",
                },
              ]
        }
    >
        <Image
            source={
                Object {
                    "uri": "avatar_uri",
                  }
            }
            style={
                Array [
                    Object {
                      "height": 34,
                      "width": 34,
                    },
                    false,
                    undefined,
                  ]
            }
        />
        <View
            style={
                Object {
                    "flex": 1,
                    "justifyContent": "center",
                  }
            }
        >
            <View
                style={undefined}
            >
                <View />
            </View>
            <View
                style={undefined}
            >
                <View />
            </View>
        </View>
        <View
            style={
                Object {
                    "alignItems": "flex-end",
                    "flex": 0.15,
                    "justifyContent": "center",
                  }
            }
        >
            <Icon
                color="#bdc6cf"
                iconStyle={undefined}
                name="chevron-right"
                raised={false}
                reverse={false}
                reverseColor="white"
                size={28}
                type={undefined}
                underlayColor="white"
            />
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLongPress={undefined}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#ededed",
                    "borderBottomWidth": 1,
                    "paddingBottom": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                  Object {
                    "backgroundColor": "peru",
                  },
                ]
      }
      underlayColor="white"
>
      <View
            style={
                  Array [
                        Object {
                          "flexDirection": "row",
                          "marginLeft": 10,
                        },
                        Object {
                          "backgroundColor": "peru",
                        },
                      ]
            }
      >
            <Image
                  source={
                        Object {
                              "uri": "avatar_uri",
                            }
                  }
                  style={
                        Array [
                              Object {
                                "height": 34,
                                "width": 34,
                              },
                              false,
                              undefined,
                            ]
                  }
            />
            <View
                  style={
                        Object {
                              "flex": 1,
                              "justifyContent": "center",
                            }
                  }
            >
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
            </View>
            <View
                  style={
                        Object {
                              "alignItems": "flex-end",
                              "flex": 0.15,
                              "justifyContent": "center",
                            }
                  }
            >
                  <Icon
                        color="#bdc6cf"
                        iconStyle={undefined}
                        name="chevron-right"
                        raised={false}
                        reverse={false}
                        reverseColor="white"
                        size={28}
                        type={undefined}
                        underlayColor="white"
                  />
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ListItem
        avatar="avatar_uri"
        chevronColor="#bdc6cf"
        containerStyle={
                Object {
                        "backgroundColor": "peru",
                      }
        }
        hideChevron={false}
        rightIcon={
                Object {
                        "name": "chevron-right",
                      }
        }
        roundAvatar={false}
        switchButton={false}
        textInputEditable={true}
        underlayColor="white"
        wrapperStyle={
                Object {
                        "backgroundColor": "peru",
                      }
        }
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "avatar": "avatar_uri",
          "chevronColor": "#bdc6cf",
          "containerStyle": Object {
            "backgroundColor": "peru",
          },
          "hideChevron": false,
          "rightIcon": Object {
            "name": "chevron-right",
          },
          "roundAvatar": false,
          "switchButton": false,
          "textInputEditable": true,
          "underlayColor": "white",
          "wrapperStyle": Object {
            "backgroundColor": "peru",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              Object {
                                "backgroundColor": "peru",
                              },
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        Object {
                                          "backgroundColor": "peru",
                                        },
                                      ]
                    }
          >
                    <Image
                              source={
                                        Object {
                                                  "uri": "avatar_uri",
                                                }
                              }
                              style={
                                        Array [
                                                  Object {
                                                    "height": 34,
                                                    "width": 34,
                                                  },
                                                  false,
                                                  undefined,
                                                ]
                              }
                    />
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
        "_debugID": 4,
        "_renderedOutput": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              Object {
                                "backgroundColor": "peru",
                              },
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        Object {
                                          "backgroundColor": "peru",
                                        },
                                      ]
                    }
          >
                    <Image
                              source={
                                        Object {
                                                  "uri": "avatar_uri",
                                                }
                              }
                              style={
                                        Array [
                                                  Object {
                                                    "height": 34,
                                                    "width": 34,
                                                  },
                                                  false,
                                                  undefined,
                                                ]
                              }
                    />
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListItem
    avatar="avatar_uri"
    chevronColor="#bdc6cf"
    containerStyle={
        Object {
            "backgroundColor": "peru",
          }
    }
    hideChevron={false}
    rightIcon={
        Object {
            "name": "chevron-right",
          }
    }
    roundAvatar={false}
    switchButton={false}
    textInputEditable={true}
    underlayColor="white"
    wrapperStyle={
        Object {
            "backgroundColor": "peru",
          }
    }
/>,
}
`;

exports[`ListItem component should render with left icon 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLongPress={undefined}
    onPress={undefined}
    style={
        Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#ededed",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
          ]
    }
    underlayColor="white"
>
    <View
        style={
            Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                Object {
                  "backgroundColor": "peru",
                },
              ]
        }
    >
        <View
            style={
                Array [
                    Object {
                      "alignItems": "center",
                      "flex": 0.15,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
            }
        >
            <Icon
                color="red"
                iconStyle={
                    Array [
                        Object {
                          "marginRight": 8,
                        },
                        undefined,
                      ]
                }
                name="wifi"
                raised={false}
                reverse={false}
                reverseColor="white"
                size={20}
                type="font-awesome"
                underlayColor="white"
            />
        </View>
        <View
            style={
                Object {
                    "flex": 1,
                    "justifyContent": "center",
                  }
            }
        >
            <View
                style={undefined}
            >
                <View />
            </View>
            <View
                style={undefined}
            >
                <View />
            </View>
        </View>
        <View
            style={
                Object {
                    "alignItems": "flex-end",
                    "flex": 0.15,
                    "justifyContent": "center",
                  }
            }
        >
            <Icon
                color="#bdc6cf"
                iconStyle={undefined}
                name="chevron-right"
                raised={false}
                reverse={false}
                reverseColor="white"
                size={28}
                type={undefined}
                underlayColor="white"
            />
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLongPress={undefined}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#ededed",
                    "borderBottomWidth": 1,
                    "paddingBottom": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                  undefined,
                ]
      }
      underlayColor="white"
>
      <View
            style={
                  Array [
                        Object {
                          "flexDirection": "row",
                          "marginLeft": 10,
                        },
                        Object {
                          "backgroundColor": "peru",
                        },
                      ]
            }
      >
            <View
                  style={
                        Array [
                              Object {
                                "alignItems": "center",
                                "flex": 0.15,
                                "justifyContent": "center",
                              },
                              undefined,
                            ]
                  }
            >
                  <Icon
                        color="red"
                        iconStyle={
                              Array [
                                    Object {
                                      "marginRight": 8,
                                    },
                                    undefined,
                                  ]
                        }
                        name="wifi"
                        raised={false}
                        reverse={false}
                        reverseColor="white"
                        size={20}
                        type="font-awesome"
                        underlayColor="white"
                  />
            </View>
            <View
                  style={
                        Object {
                              "flex": 1,
                              "justifyContent": "center",
                            }
                  }
            >
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
            </View>
            <View
                  style={
                        Object {
                              "alignItems": "flex-end",
                              "flex": 0.15,
                              "justifyContent": "center",
                            }
                  }
            >
                  <Icon
                        color="#bdc6cf"
                        iconStyle={undefined}
                        name="chevron-right"
                        raised={false}
                        reverse={false}
                        reverseColor="white"
                        size={28}
                        type={undefined}
                        underlayColor="white"
                  />
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ListItem
        chevronColor="#bdc6cf"
        hideChevron={false}
        leftIcon={
                Object {
                        "color": "red",
                        "name": "wifi",
                        "size": 20,
                        "type": "font-awesome",
                      }
        }
        rightIcon={
                Object {
                        "name": "chevron-right",
                      }
        }
        roundAvatar={false}
        switchButton={false}
        textInputEditable={true}
        underlayColor="white"
        wrapperStyle={
                Object {
                        "backgroundColor": "peru",
                      }
        }
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chevronColor": "#bdc6cf",
          "hideChevron": false,
          "leftIcon": Object {
            "color": "red",
            "name": "wifi",
            "size": 20,
            "type": "font-awesome",
          },
          "rightIcon": Object {
            "name": "chevron-right",
          },
          "roundAvatar": false,
          "switchButton": false,
          "textInputEditable": true,
          "underlayColor": "white",
          "wrapperStyle": Object {
            "backgroundColor": "peru",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        Object {
                                          "backgroundColor": "peru",
                                        },
                                      ]
                    }
          >
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "flex": 0.15,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    >
                              <Icon
                                        color="red"
                                        iconStyle={
                                                  Array [
                                                            Object {
                                                              "marginRight": 8,
                                                            },
                                                            undefined,
                                                          ]
                                        }
                                        name="wifi"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={20}
                                        type="font-awesome"
                                        underlayColor="white"
                              />
                    </View>
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
        "_debugID": 6,
        "_renderedOutput": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        Object {
                                          "backgroundColor": "peru",
                                        },
                                      ]
                    }
          >
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "flex": 0.15,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    >
                              <Icon
                                        color="red"
                                        iconStyle={
                                                  Array [
                                                            Object {
                                                              "marginRight": 8,
                                                            },
                                                            undefined,
                                                          ]
                                        }
                                        name="wifi"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={20}
                                        type="font-awesome"
                                        underlayColor="white"
                              />
                    </View>
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListItem
    chevronColor="#bdc6cf"
    hideChevron={false}
    leftIcon={
        Object {
            "color": "red",
            "name": "wifi",
            "size": 20,
            "type": "font-awesome",
          }
    }
    rightIcon={
        Object {
            "name": "chevron-right",
          }
    }
    roundAvatar={false}
    switchButton={false}
    textInputEditable={true}
    underlayColor="white"
    wrapperStyle={
        Object {
            "backgroundColor": "peru",
          }
    }
/>,
}
`;

exports[`ListItem component should render with textInput 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLongPress={undefined}
    onPress={undefined}
    style={
        Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#ededed",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
          ]
    }
    underlayColor="white"
>
    <View
        style={
            Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                undefined,
              ]
        }
    >
        <View
            style={
                Object {
                    "flex": 1,
                    "justifyContent": "center",
                  }
            }
        >
            <View
                style={undefined}
            >
                <View />
            </View>
            <View
                style={undefined}
            >
                <View />
            </View>
        </View>
        <View
            style={
                Array [
                    Object {
                      "alignItems": "flex-end",
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
            }
        >
            <TextInput
                autoCapitalize={undefined}
                autoCorrect={undefined}
                autoFocus={undefined}
                defaultValue={undefined}
                editable={true}
                keyboardType={undefined}
                maxLength={undefined}
                multiline={undefined}
                onBlur={undefined}
                onChangeText={undefined}
                onFocus={undefined}
                returnKeyType={undefined}
                selectTextOnFocus={undefined}
                style={
                    Array [
                        Object {
                          "height": 20,
                          "textAlign": "right",
                        },
                        undefined,
                      ]
                }
                value={undefined}
            />
        </View>
        <View
            style={
                Object {
                    "alignItems": "flex-end",
                    "flex": 0.15,
                    "justifyContent": "center",
                    "marginRight": 5,
                  }
            }
        >
            <Switch
                disabled={false}
                onTintColor={undefined}
                onValueChange={undefined}
                thumbTintColor={undefined}
                tintColor={undefined}
                value={false}
            />
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLongPress={undefined}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#ededed",
                    "borderBottomWidth": 1,
                    "paddingBottom": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                  undefined,
                ]
      }
      underlayColor="white"
>
      <View
            style={
                  Array [
                        Object {
                          "flexDirection": "row",
                          "marginLeft": 10,
                        },
                        undefined,
                      ]
            }
      >
            <View
                  style={
                        Object {
                              "flex": 1,
                              "justifyContent": "center",
                            }
                  }
            >
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
            </View>
            <View
                  style={
                        Array [
                              Object {
                                "alignItems": "flex-end",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              undefined,
                            ]
                  }
            >
                  <TextInput
                        autoCapitalize={undefined}
                        autoCorrect={undefined}
                        autoFocus={undefined}
                        defaultValue={undefined}
                        editable={true}
                        keyboardType={undefined}
                        maxLength={undefined}
                        multiline={undefined}
                        onBlur={undefined}
                        onChangeText={undefined}
                        onFocus={undefined}
                        returnKeyType={undefined}
                        selectTextOnFocus={undefined}
                        style={
                              Array [
                                    Object {
                                      "height": 20,
                                      "textAlign": "right",
                                    },
                                    undefined,
                                  ]
                        }
                        value={undefined}
                  />
            </View>
            <View
                  style={
                        Object {
                              "alignItems": "flex-end",
                              "flex": 0.15,
                              "justifyContent": "center",
                              "marginRight": 5,
                            }
                  }
            >
                  <Switch
                        disabled={false}
                        onTintColor={undefined}
                        onValueChange={undefined}
                        thumbTintColor={undefined}
                        tintColor={undefined}
                        value={false}
                  />
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ListItem
        chevronColor="#bdc6cf"
        fontFamily="arial"
        hideChevron={true}
        rightIcon={
                Object {
                        "name": "chevron-right",
                      }
        }
        roundAvatar={false}
        switchButton={true}
        textInput={true}
        textInputEditable={true}
        underlayColor="white"
/>,
      "_debugID": 9,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chevronColor": "#bdc6cf",
          "fontFamily": "arial",
          "hideChevron": true,
          "rightIcon": Object {
            "name": "chevron-right",
          },
          "roundAvatar": false,
          "switchButton": true,
          "textInput": true,
          "textInputEditable": true,
          "underlayColor": "white",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 5,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "flex-end",
                                                    "flex": 1,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    >
                              <TextInput
                                        autoCapitalize={undefined}
                                        autoCorrect={undefined}
                                        autoFocus={undefined}
                                        defaultValue={undefined}
                                        editable={true}
                                        keyboardType={undefined}
                                        maxLength={undefined}
                                        multiline={undefined}
                                        onBlur={undefined}
                                        onChangeText={undefined}
                                        onFocus={undefined}
                                        returnKeyType={undefined}
                                        selectTextOnFocus={undefined}
                                        style={
                                                  Array [
                                                            Object {
                                                              "height": 20,
                                                              "textAlign": "right",
                                                            },
                                                            undefined,
                                                          ]
                                        }
                                        value={undefined}
                              />
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                  "marginRight": 5,
                                                }
                              }
                    >
                              <Switch
                                        disabled={false}
                                        onTintColor={undefined}
                                        onValueChange={undefined}
                                        thumbTintColor={undefined}
                                        tintColor={undefined}
                                        value={false}
                              />
                    </View>
          </View>
</View>,
        "_debugID": 10,
        "_renderedOutput": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "flex-end",
                                                    "flex": 1,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    >
                              <TextInput
                                        autoCapitalize={undefined}
                                        autoCorrect={undefined}
                                        autoFocus={undefined}
                                        defaultValue={undefined}
                                        editable={true}
                                        keyboardType={undefined}
                                        maxLength={undefined}
                                        multiline={undefined}
                                        onBlur={undefined}
                                        onChangeText={undefined}
                                        onFocus={undefined}
                                        returnKeyType={undefined}
                                        selectTextOnFocus={undefined}
                                        style={
                                                  Array [
                                                            Object {
                                                              "height": 20,
                                                              "textAlign": "right",
                                                            },
                                                            undefined,
                                                          ]
                                        }
                                        value={undefined}
                              />
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                  "marginRight": 5,
                                                }
                              }
                    >
                              <Switch
                                        disabled={false}
                                        onTintColor={undefined}
                                        onValueChange={undefined}
                                        thumbTintColor={undefined}
                                        tintColor={undefined}
                                        value={false}
                              />
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListItem
    chevronColor="#bdc6cf"
    fontFamily="arial"
    hideChevron={true}
    rightIcon={
        Object {
            "name": "chevron-right",
          }
    }
    roundAvatar={false}
    switchButton={true}
    textInput={true}
    textInputEditable={true}
    underlayColor="white"
/>,
}
`;

exports[`ListItem component should render with title and subtitle 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLongPress={undefined}
    onPress={undefined}
    style={
        Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#ededed",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
          ]
    }
    underlayColor="white"
>
    <View
        style={
            Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                Object {
                  "backgroundColor": "peru",
                },
              ]
        }
    >
        <View
            style={
                Object {
                    "flex": 1,
                    "justifyContent": "center",
                  }
            }
        >
            <View
                style={undefined}
            >
                <TextElement
                    style={
                        Array [
                            Object {
                              "color": "#43484d",
                              "fontSize": 17.5,
                            },
                            Object {
                              "marginLeft": 10,
                            },
                            Object {
                              "backgroundColor": "peru",
                            },
                            Object {
                              "fontFamily": "arial",
                            },
                          ]
                    }
                >
                    title test
                </TextElement>
            </View>
            <View
                style={undefined}
            >
                <TextElement
                    style={
                        Array [
                            Object {
                              "color": "#86939e",
                              "fontSize": 15,
                              "fontWeight": "600",
                              "marginTop": 1,
                            },
                            Object {
                              "marginLeft": 10,
                            },
                            Object {
                              "backgroundColor": "peru",
                            },
                            Object {
                              "fontFamily": "arial",
                            },
                          ]
                    }
                >
                    title test
                </TextElement>
            </View>
        </View>
        <View
            style={
                Array [
                    Object {
                      "alignItems": "flex-end",
                      "flex": 1,
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
            }
        >
            <TextElement
                style={
                    Array [
                        Object {
                          "color": "#bdc6cf",
                          "marginRight": 5,
                        },
                        undefined,
                      ]
                }
            >
                title
            </TextElement>
        </View>
        <View
            style={
                Object {
                    "alignItems": "flex-end",
                    "flex": 0.15,
                    "justifyContent": "center",
                  }
            }
        >
            <Icon
                color="#bdc6cf"
                iconStyle={undefined}
                name="chevron-right"
                raised={false}
                reverse={false}
                reverseColor="white"
                size={28}
                type={undefined}
                underlayColor="white"
            />
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLongPress={undefined}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#ededed",
                    "borderBottomWidth": 1,
                    "paddingBottom": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                  undefined,
                ]
      }
      underlayColor="white"
>
      <View
            style={
                  Array [
                        Object {
                          "flexDirection": "row",
                          "marginLeft": 10,
                        },
                        Object {
                          "backgroundColor": "peru",
                        },
                      ]
            }
      >
            <View
                  style={
                        Object {
                              "flex": 1,
                              "justifyContent": "center",
                            }
                  }
            >
                  <View
                        style={undefined}
                  >
                        <TextElement
                              style={
                                    Array [
                                          Object {
                                            "color": "#43484d",
                                            "fontSize": 17.5,
                                          },
                                          Object {
                                            "marginLeft": 10,
                                          },
                                          Object {
                                            "backgroundColor": "peru",
                                          },
                                          Object {
                                            "fontFamily": "arial",
                                          },
                                        ]
                              }
                        >
                              title test
                        </TextElement>
                  </View>
                  <View
                        style={undefined}
                  >
                        <TextElement
                              style={
                                    Array [
                                          Object {
                                            "color": "#86939e",
                                            "fontSize": 15,
                                            "fontWeight": "600",
                                            "marginTop": 1,
                                          },
                                          Object {
                                            "marginLeft": 10,
                                          },
                                          Object {
                                            "backgroundColor": "peru",
                                          },
                                          Object {
                                            "fontFamily": "arial",
                                          },
                                        ]
                              }
                        >
                              title test
                        </TextElement>
                  </View>
            </View>
            <View
                  style={
                        Array [
                              Object {
                                "alignItems": "flex-end",
                                "flex": 1,
                                "justifyContent": "center",
                              },
                              undefined,
                            ]
                  }
            >
                  <TextElement
                        style={
                              Array [
                                    Object {
                                      "color": "#bdc6cf",
                                      "marginRight": 5,
                                    },
                                    undefined,
                                  ]
                        }
                  >
                        title
                  </TextElement>
            </View>
            <View
                  style={
                        Object {
                              "alignItems": "flex-end",
                              "flex": 0.15,
                              "justifyContent": "center",
                            }
                  }
            >
                  <Icon
                        color="#bdc6cf"
                        iconStyle={undefined}
                        name="chevron-right"
                        raised={false}
                        reverse={false}
                        reverseColor="white"
                        size={28}
                        type={undefined}
                        underlayColor="white"
                  />
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ListItem
        chevronColor="#bdc6cf"
        fontFamily="arial"
        hideChevron={false}
        rightIcon={
                Object {
                        "name": "chevron-right",
                      }
        }
        rightTitle="title"
        roundAvatar={false}
        subtitle="title test"
        subtitleStyle={
                Object {
                        "backgroundColor": "peru",
                      }
        }
        switchButton={false}
        textInputEditable={true}
        title="title test"
        titleStyle={
                Object {
                        "backgroundColor": "peru",
                      }
        }
        underlayColor="white"
        wrapperStyle={
                Object {
                        "backgroundColor": "peru",
                      }
        }
/>,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chevronColor": "#bdc6cf",
          "fontFamily": "arial",
          "hideChevron": false,
          "rightIcon": Object {
            "name": "chevron-right",
          },
          "rightTitle": "title",
          "roundAvatar": false,
          "subtitle": "title test",
          "subtitleStyle": Object {
            "backgroundColor": "peru",
          },
          "switchButton": false,
          "textInputEditable": true,
          "title": "title test",
          "titleStyle": Object {
            "backgroundColor": "peru",
          },
          "underlayColor": "white",
          "wrapperStyle": Object {
            "backgroundColor": "peru",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        Object {
                                          "backgroundColor": "peru",
                                        },
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <TextElement
                                                  style={
                                                            Array [
                                                                      Object {
                                                                        "color": "#43484d",
                                                                        "fontSize": 17.5,
                                                                      },
                                                                      Object {
                                                                        "marginLeft": 10,
                                                                      },
                                                                      Object {
                                                                        "backgroundColor": "peru",
                                                                      },
                                                                      Object {
                                                                        "fontFamily": "arial",
                                                                      },
                                                                    ]
                                                  }
                                        >
                                                  title test
                                        </TextElement>
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <TextElement
                                                  style={
                                                            Array [
                                                                      Object {
                                                                        "color": "#86939e",
                                                                        "fontSize": 15,
                                                                        "fontWeight": "600",
                                                                        "marginTop": 1,
                                                                      },
                                                                      Object {
                                                                        "marginLeft": 10,
                                                                      },
                                                                      Object {
                                                                        "backgroundColor": "peru",
                                                                      },
                                                                      Object {
                                                                        "fontFamily": "arial",
                                                                      },
                                                                    ]
                                                  }
                                        >
                                                  title test
                                        </TextElement>
                              </View>
                    </View>
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "flex-end",
                                                    "flex": 1,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    >
                              <TextElement
                                        style={
                                                  Array [
                                                            Object {
                                                              "color": "#bdc6cf",
                                                              "marginRight": 5,
                                                            },
                                                            undefined,
                                                          ]
                                        }
                              >
                                        title
                              </TextElement>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
        "_debugID": 8,
        "_renderedOutput": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        Object {
                                          "backgroundColor": "peru",
                                        },
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <TextElement
                                                  style={
                                                            Array [
                                                                      Object {
                                                                        "color": "#43484d",
                                                                        "fontSize": 17.5,
                                                                      },
                                                                      Object {
                                                                        "marginLeft": 10,
                                                                      },
                                                                      Object {
                                                                        "backgroundColor": "peru",
                                                                      },
                                                                      Object {
                                                                        "fontFamily": "arial",
                                                                      },
                                                                    ]
                                                  }
                                        >
                                                  title test
                                        </TextElement>
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <TextElement
                                                  style={
                                                            Array [
                                                                      Object {
                                                                        "color": "#86939e",
                                                                        "fontSize": 15,
                                                                        "fontWeight": "600",
                                                                        "marginTop": 1,
                                                                      },
                                                                      Object {
                                                                        "marginLeft": 10,
                                                                      },
                                                                      Object {
                                                                        "backgroundColor": "peru",
                                                                      },
                                                                      Object {
                                                                        "fontFamily": "arial",
                                                                      },
                                                                    ]
                                                  }
                                        >
                                                  title test
                                        </TextElement>
                              </View>
                    </View>
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "flex-end",
                                                    "flex": 1,
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    >
                              <TextElement
                                        style={
                                                  Array [
                                                            Object {
                                                              "color": "#bdc6cf",
                                                              "marginRight": 5,
                                                            },
                                                            undefined,
                                                          ]
                                        }
                              >
                                        title
                              </TextElement>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListItem
    chevronColor="#bdc6cf"
    fontFamily="arial"
    hideChevron={false}
    rightIcon={
        Object {
            "name": "chevron-right",
          }
    }
    rightTitle="title"
    roundAvatar={false}
    subtitle="title test"
    subtitleStyle={
        Object {
            "backgroundColor": "peru",
          }
    }
    switchButton={false}
    textInputEditable={true}
    title="title test"
    titleStyle={
        Object {
            "backgroundColor": "peru",
          }
    }
    underlayColor="white"
    wrapperStyle={
        Object {
            "backgroundColor": "peru",
          }
    }
/>,
}
`;

exports[`ListItem component should render without issues 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLongPress={undefined}
    onPress={undefined}
    style={
        Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#ededed",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
          ]
    }
    underlayColor="white"
>
    <View
        style={
            Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                undefined,
              ]
        }
    >
        <View
            style={
                Object {
                    "flex": 1,
                    "justifyContent": "center",
                  }
            }
        >
            <View
                style={undefined}
            >
                <View />
            </View>
            <View
                style={undefined}
            >
                <View />
            </View>
        </View>
        <View
            style={
                Object {
                    "alignItems": "flex-end",
                    "flex": 0.15,
                    "justifyContent": "center",
                  }
            }
        >
            <Icon
                color="#bdc6cf"
                iconStyle={undefined}
                name="chevron-right"
                raised={false}
                reverse={false}
                reverseColor="white"
                size={28}
                type={undefined}
                underlayColor="white"
            />
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLongPress={undefined}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#ededed",
                    "borderBottomWidth": 1,
                    "paddingBottom": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                  undefined,
                ]
      }
      underlayColor="white"
>
      <View
            style={
                  Array [
                        Object {
                          "flexDirection": "row",
                          "marginLeft": 10,
                        },
                        undefined,
                      ]
            }
      >
            <View
                  style={
                        Object {
                              "flex": 1,
                              "justifyContent": "center",
                            }
                  }
            >
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
            </View>
            <View
                  style={
                        Object {
                              "alignItems": "flex-end",
                              "flex": 0.15,
                              "justifyContent": "center",
                            }
                  }
            >
                  <Icon
                        color="#bdc6cf"
                        iconStyle={undefined}
                        name="chevron-right"
                        raised={false}
                        reverse={false}
                        reverseColor="white"
                        size={28}
                        type={undefined}
                        underlayColor="white"
                  />
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ListItem
        chevronColor="#bdc6cf"
        hideChevron={false}
        rightIcon={
                Object {
                        "name": "chevron-right",
                      }
        }
        roundAvatar={false}
        switchButton={false}
        textInputEditable={true}
        underlayColor="white"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chevronColor": "#bdc6cf",
          "hideChevron": false,
          "rightIcon": Object {
            "name": "chevron-right",
          },
          "roundAvatar": false,
          "switchButton": false,
          "textInputEditable": true,
          "underlayColor": "white",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
        "_debugID": 2,
        "_renderedOutput": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={undefined}
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListItem
    chevronColor="#bdc6cf"
    hideChevron={false}
    rightIcon={
        Object {
            "name": "chevron-right",
          }
    }
    roundAvatar={false}
    switchButton={false}
    textInputEditable={true}
    underlayColor="white"
/>,
}
`;
