// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItem component should render without issues 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <View
    onLongPress={undefined}
    onPress={undefined}
    style={
        Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#ededed",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
          ]
    }
    underlayColor="white"
>
    <View
        style={
            Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                undefined,
              ]
        }
    >
        <View
            style={
                Object {
                    "flex": 1,
                    "justifyContent": "center",
                  }
            }
        >
            <View
                style={undefined}
            >
                <View />
            </View>
            <View
                style={undefined}
            >
                <View />
            </View>
        </View>
        <View
            style={
                Object {
                    "alignItems": "flex-end",
                    "flex": 0.15,
                    "justifyContent": "center",
                  }
            }
        >
            <Icon
                color="#bdc6cf"
                iconStyle={
                    Array [
                        Object {},
                        undefined,
                      ]
                }
                name="chevron-right"
                raised={false}
                reverse={false}
                reverseColor="white"
                size={28}
                type={undefined}
                underlayColor="white"
            />
        </View>
    </View>
</View>,
  "nodes": Array [
    <View
      onLongPress={undefined}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "backgroundColor": "transparent",
                    "borderBottomColor": "#ededed",
                    "borderBottomWidth": 1,
                    "paddingBottom": 10,
                    "paddingRight": 10,
                    "paddingTop": 10,
                  },
                  undefined,
                ]
      }
      underlayColor="white"
>
      <View
            style={
                  Array [
                        Object {
                          "flexDirection": "row",
                          "marginLeft": 10,
                        },
                        undefined,
                      ]
            }
      >
            <View
                  style={
                        Object {
                              "flex": 1,
                              "justifyContent": "center",
                            }
                  }
            >
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
                  <View
                        style={undefined}
                  >
                        <View />
                  </View>
            </View>
            <View
                  style={
                        Object {
                              "alignItems": "flex-end",
                              "flex": 0.15,
                              "justifyContent": "center",
                            }
                  }
            >
                  <Icon
                        color="#bdc6cf"
                        iconStyle={
                              Array [
                                    Object {},
                                    undefined,
                                  ]
                        }
                        name="chevron-right"
                        raised={false}
                        reverse={false}
                        reverseColor="white"
                        size={28}
                        type={undefined}
                        underlayColor="white"
                  />
            </View>
      </View>
</View>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <ListItem
        chevronColor="#bdc6cf"
        hideChevron={false}
        rightIcon={
                Object {
                        "name": "chevron-right",
                      }
        }
        roundAvatar={false}
        underlayColor="white"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "chevronColor": "#bdc6cf",
          "hideChevron": false,
          "rightIcon": Object {
            "name": "chevron-right",
          },
          "roundAvatar": false,
          "underlayColor": "white",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={
                                                  Array [
                                                            Object {},
                                                            undefined,
                                                          ]
                                        }
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
        "_debugID": 2,
        "_renderedOutput": <View
          onLongPress={undefined}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "backgroundColor": "transparent",
                                "borderBottomColor": "#ededed",
                                "borderBottomWidth": 1,
                                "paddingBottom": 10,
                                "paddingRight": 10,
                                "paddingTop": 10,
                              },
                              undefined,
                            ]
          }
          underlayColor="white"
>
          <View
                    style={
                              Array [
                                        Object {
                                          "flexDirection": "row",
                                          "marginLeft": 10,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Object {
                                                  "flex": 1,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                              <View
                                        style={undefined}
                              >
                                        <View />
                              </View>
                    </View>
                    <View
                              style={
                                        Object {
                                                  "alignItems": "flex-end",
                                                  "flex": 0.15,
                                                  "justifyContent": "center",
                                                }
                              }
                    >
                              <Icon
                                        color="#bdc6cf"
                                        iconStyle={
                                                  Array [
                                                            Object {},
                                                            undefined,
                                                          ]
                                        }
                                        name="chevron-right"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={28}
                                        type={undefined}
                                        underlayColor="white"
                              />
                    </View>
          </View>
</View>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListItem
    chevronColor="#bdc6cf"
    hideChevron={false}
    rightIcon={
        Object {
            "name": "chevron-right",
          }
    }
    roundAvatar={false}
    underlayColor="white"
/>,
}
`;
