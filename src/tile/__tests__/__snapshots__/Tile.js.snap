// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FeaturedTitle component should render featured tile 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <FeaturedTile
    activeOpacity={undefined}
    caption="Some Caption Text"
    captionStyle={undefined}
    containerStyle={undefined}
    height={600}
    icon={undefined}
    imageContainerStyle={undefined}
    imageSrc={
        Object {
            "url": "http://google.com",
          }
    }
    onPress={undefined}
    overlayContainerStyle={undefined}
    title="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem"
    titleStyle={undefined}
    width={750}
/>,
  "nodes": Array [
    <FeaturedTile
      activeOpacity={undefined}
      caption="Some Caption Text"
      captionStyle={undefined}
      containerStyle={undefined}
      height={600}
      icon={undefined}
      imageContainerStyle={undefined}
      imageSrc={
            Object {
                  "url": "http://google.com",
                }
      }
      onPress={undefined}
      overlayContainerStyle={undefined}
      title="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem"
      titleStyle={undefined}
      width={750}
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Tile
        caption="Some Caption Text"
        featured={true}
        imageSrc={
                Object {
                        "url": "http://google.com",
                      }
        }
        title="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem"
/>,
      "_debugID": 3,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "caption": "Some Caption Text",
          "featured": true,
          "imageSrc": Object {
            "url": "http://google.com",
          },
          "title": "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 2,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <FeaturedTile
          activeOpacity={undefined}
          caption="Some Caption Text"
          captionStyle={undefined}
          containerStyle={undefined}
          height={600}
          icon={undefined}
          imageContainerStyle={undefined}
          imageSrc={
                    Object {
                              "url": "http://google.com",
                            }
          }
          onPress={undefined}
          overlayContainerStyle={undefined}
          title="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem"
          titleStyle={undefined}
          width={750}
/>,
        "_debugID": 4,
        "_renderedOutput": <FeaturedTile
          activeOpacity={undefined}
          caption="Some Caption Text"
          captionStyle={undefined}
          containerStyle={undefined}
          height={600}
          icon={undefined}
          imageContainerStyle={undefined}
          imageSrc={
                    Object {
                              "url": "http://google.com",
                            }
          }
          onPress={undefined}
          overlayContainerStyle={undefined}
          title="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem"
          titleStyle={undefined}
          width={750}
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tile
    caption="Some Caption Text"
    featured={true}
    imageSrc={
        Object {
            "url": "http://google.com",
          }
    }
    title="Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolores dolore exercitationem"
/>,
}
`;

exports[`FeaturedTitle component should render featured tile with icon 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <FeaturedTile
    activeOpacity={undefined}
    caption={undefined}
    captionStyle={undefined}
    containerStyle={undefined}
    height={600}
    icon={
        Object {
            "name": "play-circle",
            "type": "font-awesome",
          }
    }
    imageContainerStyle={undefined}
    imageSrc={
        Object {
            "url": "http://google.com",
          }
    }
    onPress={undefined}
    overlayContainerStyle={undefined}
    title={undefined}
    titleStyle={undefined}
    width={750}
/>,
  "nodes": Array [
    <FeaturedTile
      activeOpacity={undefined}
      caption={undefined}
      captionStyle={undefined}
      containerStyle={undefined}
      height={600}
      icon={
            Object {
                  "name": "play-circle",
                  "type": "font-awesome",
                }
      }
      imageContainerStyle={undefined}
      imageSrc={
            Object {
                  "url": "http://google.com",
                }
      }
      onPress={undefined}
      overlayContainerStyle={undefined}
      title={undefined}
      titleStyle={undefined}
      width={750}
/>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Tile
        featured={true}
        icon={
                Object {
                        "name": "play-circle",
                        "type": "font-awesome",
                      }
        }
        imageSrc={
                Object {
                        "url": "http://google.com",
                      }
        }
/>,
      "_debugID": 5,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "featured": true,
          "icon": Object {
            "name": "play-circle",
            "type": "font-awesome",
          },
          "imageSrc": Object {
            "url": "http://google.com",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <FeaturedTile
          activeOpacity={undefined}
          caption={undefined}
          captionStyle={undefined}
          containerStyle={undefined}
          height={600}
          icon={
                    Object {
                              "name": "play-circle",
                              "type": "font-awesome",
                            }
          }
          imageContainerStyle={undefined}
          imageSrc={
                    Object {
                              "url": "http://google.com",
                            }
          }
          onPress={undefined}
          overlayContainerStyle={undefined}
          title={undefined}
          titleStyle={undefined}
          width={750}
/>,
        "_debugID": 6,
        "_renderedOutput": <FeaturedTile
          activeOpacity={undefined}
          caption={undefined}
          captionStyle={undefined}
          containerStyle={undefined}
          height={600}
          icon={
                    Object {
                              "name": "play-circle",
                              "type": "font-awesome",
                            }
          }
          imageContainerStyle={undefined}
          imageSrc={
                    Object {
                              "url": "http://google.com",
                            }
          }
          onPress={undefined}
          overlayContainerStyle={undefined}
          title={undefined}
          titleStyle={undefined}
          width={750}
/>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tile
    featured={true}
    icon={
        Object {
            "name": "play-circle",
            "type": "font-awesome",
          }
    }
    imageSrc={
        Object {
            "url": "http://google.com",
          }
    }
/>,
}
`;

exports[`FeaturedTitle component should render tile with icon 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <TouchableOpacity
    activeOpacity={0.2}
    focusedOpacity={0.7}
    onPress={undefined}
    style={
        Array [
            Object {
              "height": 600,
              "width": 750,
            },
            Object {
              "height": 70,
            },
          ]
    }
>
    <Image
        source={
            Object {
                "url": "http://google.com",
              }
        }
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "flex": 2,
                  "justifyContent": "center",
                  "resizeMode": "cover",
                },
                Object {
                  "height": 70,
                },
              ]
        }
    >
        <View
            style={
                Array [
                    Object {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "justifyContent": "center",
                    },
                    Object {
                      "height": 70,
                    },
                  ]
            }
        >
            <Icon
                color="black"
                name="play-circle"
                raised={false}
                reverse={false}
                reverseColor="white"
                size={24}
                type="font-awesome"
                underlayColor="white"
            />
        </View>
    </Image>
    <View
        style={
            Array [
                Object {
                  "paddingBottom": 5,
                  "paddingLeft": 15,
                  "paddingRight": 15,
                  "paddingTop": 15,
                },
                Object {
                  "height": 70,
                },
              ]
        }
    >
        <TextElement
            h4={true}
            style={
                Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "marginBottom": 5,
                    },
                    Object {
                      "backgroundColor": "yellow",
                    },
                  ]
            }
        >
            Lorem ipsum dolor sit amet, consectetur
        </TextElement>
    </View>
</TouchableOpacity>,
  "nodes": Array [
    <TouchableOpacity
      activeOpacity={0.2}
      focusedOpacity={0.7}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "height": 600,
                    "width": 750,
                  },
                  Object {
                    "height": 70,
                  },
                ]
      }
>
      <Image
            source={
                  Object {
                        "url": "http://google.com",
                      }
            }
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#ffffff",
                          "flex": 2,
                          "justifyContent": "center",
                          "resizeMode": "cover",
                        },
                        Object {
                          "height": 70,
                        },
                      ]
            }
      >
            <View
                  style={
                        Array [
                              Object {
                                "alignItems": "center",
                                "alignSelf": "center",
                                "justifyContent": "center",
                              },
                              Object {
                                "height": 70,
                              },
                            ]
                  }
            >
                  <Icon
                        color="black"
                        name="play-circle"
                        raised={false}
                        reverse={false}
                        reverseColor="white"
                        size={24}
                        type="font-awesome"
                        underlayColor="white"
                  />
            </View>
      </Image>
      <View
            style={
                  Array [
                        Object {
                          "paddingBottom": 5,
                          "paddingLeft": 15,
                          "paddingRight": 15,
                          "paddingTop": 15,
                        },
                        Object {
                          "height": 70,
                        },
                      ]
            }
      >
            <TextElement
                  h4={true}
                  style={
                        Array [
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "marginBottom": 5,
                              },
                              Object {
                                "backgroundColor": "yellow",
                              },
                            ]
                  }
            >
                  Lorem ipsum dolor sit amet, consectetur
            </TextElement>
      </View>
</TouchableOpacity>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Tile
        containerStyle={
                Object {
                        "height": 70,
                      }
        }
        contentContainerStyle={
                Object {
                        "height": 70,
                      }
        }
        icon={
                Object {
                        "name": "play-circle",
                        "type": "font-awesome",
                      }
        }
        iconContainerStyle={
                Object {
                        "height": 70,
                      }
        }
        imageContainerStyle={
                Object {
                        "height": 70,
                      }
        }
        imageSrc={
                Object {
                        "url": "http://google.com",
                      }
        }
        title="Lorem ipsum dolor sit amet, consectetur"
        titleStyle={
                Object {
                        "backgroundColor": "yellow",
                      }
        }
/>,
      "_debugID": 7,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "containerStyle": Object {
            "height": 70,
          },
          "contentContainerStyle": Object {
            "height": 70,
          },
          "icon": Object {
            "name": "play-circle",
            "type": "font-awesome",
          },
          "iconContainerStyle": Object {
            "height": 70,
          },
          "imageContainerStyle": Object {
            "height": 70,
          },
          "imageSrc": Object {
            "url": "http://google.com",
          },
          "title": "Lorem ipsum dolor sit amet, consectetur",
          "titleStyle": Object {
            "backgroundColor": "yellow",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 4,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <TouchableOpacity
          activeOpacity={0.2}
          focusedOpacity={0.7}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "height": 600,
                                "width": 750,
                              },
                              Object {
                                "height": 70,
                              },
                            ]
          }
>
          <Image
                    source={
                              Object {
                                        "url": "http://google.com",
                                      }
                    }
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "backgroundColor": "#ffffff",
                                          "flex": 2,
                                          "justifyContent": "center",
                                          "resizeMode": "cover",
                                        },
                                        Object {
                                          "height": 70,
                                        },
                                      ]
                    }
          >
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "alignSelf": "center",
                                                    "justifyContent": "center",
                                                  },
                                                  Object {
                                                    "height": 70,
                                                  },
                                                ]
                              }
                    >
                              <Icon
                                        color="black"
                                        name="play-circle"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={24}
                                        type="font-awesome"
                                        underlayColor="white"
                              />
                    </View>
          </Image>
          <View
                    style={
                              Array [
                                        Object {
                                          "paddingBottom": 5,
                                          "paddingLeft": 15,
                                          "paddingRight": 15,
                                          "paddingTop": 15,
                                        },
                                        Object {
                                          "height": 70,
                                        },
                                      ]
                    }
          >
                    <TextElement
                              h4={true}
                              style={
                                        Array [
                                                  Object {
                                                    "backgroundColor": "rgba(0,0,0,0)",
                                                    "marginBottom": 5,
                                                  },
                                                  Object {
                                                    "backgroundColor": "yellow",
                                                  },
                                                ]
                              }
                    >
                              Lorem ipsum dolor sit amet, consectetur
                    </TextElement>
          </View>
</TouchableOpacity>,
        "_debugID": 8,
        "_renderedOutput": <TouchableOpacity
          activeOpacity={0.2}
          focusedOpacity={0.7}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "height": 600,
                                "width": 750,
                              },
                              Object {
                                "height": 70,
                              },
                            ]
          }
>
          <Image
                    source={
                              Object {
                                        "url": "http://google.com",
                                      }
                    }
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "backgroundColor": "#ffffff",
                                          "flex": 2,
                                          "justifyContent": "center",
                                          "resizeMode": "cover",
                                        },
                                        Object {
                                          "height": 70,
                                        },
                                      ]
                    }
          >
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "alignSelf": "center",
                                                    "justifyContent": "center",
                                                  },
                                                  Object {
                                                    "height": 70,
                                                  },
                                                ]
                              }
                    >
                              <Icon
                                        color="black"
                                        name="play-circle"
                                        raised={false}
                                        reverse={false}
                                        reverseColor="white"
                                        size={24}
                                        type="font-awesome"
                                        underlayColor="white"
                              />
                    </View>
          </Image>
          <View
                    style={
                              Array [
                                        Object {
                                          "paddingBottom": 5,
                                          "paddingLeft": 15,
                                          "paddingRight": 15,
                                          "paddingTop": 15,
                                        },
                                        Object {
                                          "height": 70,
                                        },
                                      ]
                    }
          >
                    <TextElement
                              h4={true}
                              style={
                                        Array [
                                                  Object {
                                                    "backgroundColor": "rgba(0,0,0,0)",
                                                    "marginBottom": 5,
                                                  },
                                                  Object {
                                                    "backgroundColor": "yellow",
                                                  },
                                                ]
                              }
                    >
                              Lorem ipsum dolor sit amet, consectetur
                    </TextElement>
          </View>
</TouchableOpacity>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tile
    containerStyle={
        Object {
            "height": 70,
          }
    }
    contentContainerStyle={
        Object {
            "height": 70,
          }
    }
    icon={
        Object {
            "name": "play-circle",
            "type": "font-awesome",
          }
    }
    iconContainerStyle={
        Object {
            "height": 70,
          }
    }
    imageContainerStyle={
        Object {
            "height": 70,
          }
    }
    imageSrc={
        Object {
            "url": "http://google.com",
          }
    }
    title="Lorem ipsum dolor sit amet, consectetur"
    titleStyle={
        Object {
            "backgroundColor": "yellow",
          }
    }
/>,
}
`;

exports[`FeaturedTitle component should render without issues 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <TouchableOpacity
    activeOpacity={0.2}
    focusedOpacity={0.7}
    onPress={undefined}
    style={
        Array [
            Object {
              "height": 600,
              "width": 750,
            },
            undefined,
          ]
    }
>
    <Image
        source={
            Object {
                "url": "http://google.com",
              }
        }
        style={
            Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#ffffff",
                  "flex": 2,
                  "justifyContent": "center",
                  "resizeMode": "cover",
                },
                undefined,
              ]
        }
    >
        <View
            style={
                Array [
                    Object {
                      "alignItems": "center",
                      "alignSelf": "center",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
            }
        />
    </Image>
    <View
        style={
            Array [
                Object {
                  "paddingBottom": 5,
                  "paddingLeft": 15,
                  "paddingRight": 15,
                  "paddingTop": 15,
                },
                undefined,
              ]
        }
    >
        <TextElement
            h4={true}
            style={
                Array [
                    Object {
                      "backgroundColor": "rgba(0,0,0,0)",
                      "marginBottom": 5,
                    },
                    undefined,
                  ]
            }
        />
    </View>
</TouchableOpacity>,
  "nodes": Array [
    <TouchableOpacity
      activeOpacity={0.2}
      focusedOpacity={0.7}
      onPress={undefined}
      style={
            Array [
                  Object {
                    "height": 600,
                    "width": 750,
                  },
                  undefined,
                ]
      }
>
      <Image
            source={
                  Object {
                        "url": "http://google.com",
                      }
            }
            style={
                  Array [
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#ffffff",
                          "flex": 2,
                          "justifyContent": "center",
                          "resizeMode": "cover",
                        },
                        undefined,
                      ]
            }
      >
            <View
                  style={
                        Array [
                              Object {
                                "alignItems": "center",
                                "alignSelf": "center",
                                "justifyContent": "center",
                              },
                              undefined,
                            ]
                  }
            />
      </Image>
      <View
            style={
                  Array [
                        Object {
                          "paddingBottom": 5,
                          "paddingLeft": 15,
                          "paddingRight": 15,
                          "paddingTop": 15,
                        },
                        undefined,
                      ]
            }
      >
            <TextElement
                  h4={true}
                  style={
                        Array [
                              Object {
                                "backgroundColor": "rgba(0,0,0,0)",
                                "marginBottom": 5,
                              },
                              undefined,
                            ]
                  }
            />
      </View>
</TouchableOpacity>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Tile
        imageSrc={
                Object {
                        "url": "http://google.com",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "imageSrc": Object {
            "url": "http://google.com",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <TouchableOpacity
          activeOpacity={0.2}
          focusedOpacity={0.7}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "height": 600,
                                "width": 750,
                              },
                              undefined,
                            ]
          }
>
          <Image
                    source={
                              Object {
                                        "url": "http://google.com",
                                      }
                    }
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "backgroundColor": "#ffffff",
                                          "flex": 2,
                                          "justifyContent": "center",
                                          "resizeMode": "cover",
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "alignSelf": "center",
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    />
          </Image>
          <View
                    style={
                              Array [
                                        Object {
                                          "paddingBottom": 5,
                                          "paddingLeft": 15,
                                          "paddingRight": 15,
                                          "paddingTop": 15,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <TextElement
                              h4={true}
                              style={
                                        Array [
                                                  Object {
                                                    "backgroundColor": "rgba(0,0,0,0)",
                                                    "marginBottom": 5,
                                                  },
                                                  undefined,
                                                ]
                              }
                    />
          </View>
</TouchableOpacity>,
        "_debugID": 2,
        "_renderedOutput": <TouchableOpacity
          activeOpacity={0.2}
          focusedOpacity={0.7}
          onPress={undefined}
          style={
                    Array [
                              Object {
                                "height": 600,
                                "width": 750,
                              },
                              undefined,
                            ]
          }
>
          <Image
                    source={
                              Object {
                                        "url": "http://google.com",
                                      }
                    }
                    style={
                              Array [
                                        Object {
                                          "alignItems": "center",
                                          "backgroundColor": "#ffffff",
                                          "flex": 2,
                                          "justifyContent": "center",
                                          "resizeMode": "cover",
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <View
                              style={
                                        Array [
                                                  Object {
                                                    "alignItems": "center",
                                                    "alignSelf": "center",
                                                    "justifyContent": "center",
                                                  },
                                                  undefined,
                                                ]
                              }
                    />
          </Image>
          <View
                    style={
                              Array [
                                        Object {
                                          "paddingBottom": 5,
                                          "paddingLeft": 15,
                                          "paddingRight": 15,
                                          "paddingTop": 15,
                                        },
                                        undefined,
                                      ]
                    }
          >
                    <TextElement
                              h4={true}
                              style={
                                        Array [
                                                  Object {
                                                    "backgroundColor": "rgba(0,0,0,0)",
                                                    "marginBottom": 5,
                                                  },
                                                  undefined,
                                                ]
                              }
                    />
          </View>
</TouchableOpacity>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Tile
    imageSrc={
        Object {
            "url": "http://google.com",
          }
    }
/>,
}
`;
