// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Badge Component should allow adding custom element 1`] = `
<Text
  accessible={true}
  allowFontScaling={true}
  ellipsizeMode="tail"
>
  Hello
</Text>
`;

exports[`Badge Component should allow custom component 1`] = `
<Component
  style={Object {}}
>
  <TouchableWithoutFeedback
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 14,
        }
      }
    >
      23
    </Text>
  </TouchableWithoutFeedback>
</Component>
`;

exports[`Badge Component should allow wrapper style 1`] = `
<Component
  style={Object {}}
>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 14,
        }
      }
    />
  </Component>
</Component>
`;

exports[`Badge Component should apply container style in the badge 1`] = `
<Component
  style={Object {}}
>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "orange",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 14,
        }
      }
    />
  </Component>
</Component>
`;

exports[`Badge Component should apply text style in the badge 1`] = `
<Component
  style={Object {}}
>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "orange",
          "fontSize": 14,
        }
      }
    />
  </Component>
</Component>
`;

exports[`Badge Component should have a touchable when onPress is passed in 1`] = `
<Component
  style={Object {}}
>
  <TouchableOpacity
    activeOpacity={0.2}
    onPress={[MockFunction]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 14,
        }
      }
    >
      23
    </Text>
  </TouchableOpacity>
</Component>
`;

exports[`Badge Component should pass value props should still work 1`] = `
<Component
  style={Object {}}
>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 14,
        }
      }
    >
      foo
    </Text>
  </Component>
</Component>
`;

exports[`Badge Component should render if element included 1`] = `
<Component
  style={Object {}}
>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      title="foo"
    />
  </Component>
</Component>
`;

exports[`Badge Component should render without issue 1`] = `
<Component
  style={Object {}}
>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "white",
          "fontSize": 14,
        }
      }
    />
  </Component>
</Component>
`;

exports[`Badge Component should show error if value and child are included 1`] = `
<Component
  style={Object {}}
>
  <Component
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#2089dc",
        "borderRadius": 20,
        "justifyContent": "center",
        "padding": 12,
        "paddingBottom": 3,
        "paddingTop": 3,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </Component>
</Component>
`;
