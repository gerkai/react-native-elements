// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS SearchBar component should render with a custom Cancel button title 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={20}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Annuler"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render with a custom clear icon 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={20}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render with a custom clear icon component 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={20}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render with a custom methods 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={20}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[MockFunction]}
    onChangeText={[Function]}
    onClear={[MockFunction]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render with a custom search icon 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={50}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render with a custom search icon component 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={<Component />}
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render with loading 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "height": 70,
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={20}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="small"
          style={
            Object {
              "flex": 1,
              "marginRight": 5,
            }
          }
        />
      </Component>
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render without clear icon 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={20}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render without issues 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={
      <Themed.Icon
        color="#7d7d7d"
        name="ios-search"
        size={20}
        type="ionicon"
      />
    }
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;

exports[`iOS SearchBar component should render without search icon 1`] = `
<Component
  style={
    Object {
      "backgroundColor": "#f5f5f5",
      "flexDirection": "row",
      "overflow": "hidden",
      "paddingBottom": 13,
      "paddingTop": 13,
      "width": "100%",
    }
  }
>
  <ForwardRef(Themed.Input)
    containerStyle={
      Object {
        "width": "100%",
      }
    }
    inputContainerStyle={
      Object {
        "backgroundColor": "#dcdce1",
        "borderBottomWidth": 0,
        "borderRadius": 9,
        "height": 36,
        "marginLeft": 15,
        "marginRight": 15,
      }
    }
    inputStyle={
      Object {
        "marginLeft": 6,
      }
    }
    leftIcon={null}
    leftIconContainerStyle={
      Object {
        "marginLeft": 8,
      }
    }
    onBlur={[Function]}
    onCancel={[Function]}
    onChangeText={[Function]}
    onClear={[Function]}
    onFocus={[Function]}
    placeholderTextColor="#7d7d7d"
    rightIcon={
      <Component
        style={
          Object {
            "flexDirection": "row",
          }
        }
      />
    }
    rightIconContainerStyle={
      Object {
        "marginRight": 8,
      }
    }
    testID="searchInput"
    theme={
      Object {
        "colors": Object {
          "disabled": "hsl(208, 8%, 90%)",
          "divider": "#bcbbc1",
          "error": "#ff190c",
          "grey0": "#393e42",
          "grey1": "#43484d",
          "grey2": "#5e6977",
          "grey3": "#86939e",
          "grey4": "#bdc6cf",
          "grey5": "#e1e8ee",
          "greyOutline": "#bbb",
          "primary": "#2089dc",
          "searchBg": "#303337",
          "secondary": "#8F0CE8",
        },
      }
    }
  />
  <Component
    onLayout={[Function]}
    style={
      Object {
        "marginLeft": 0,
      }
    }
  >
    <Button
      onPress={[Function]}
      title="Cancel"
    />
  </Component>
</Component>
`;
